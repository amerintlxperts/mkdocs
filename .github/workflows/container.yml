name: Build and Push Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - main  # Trigger on push to main branch

permissions:
  packages: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871

      - name: Create Temporary Directory
        id: create-temp-dir
        run: |
          TEMP_DIR=$(mktemp -d -p "${RUNNER_WORKSPACE}/mkdocs")
          echo "TEMP_DIR=$TEMP_DIR" >> $GITHUB_ENV

      - name: Clone Squidfunk
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871
        with:
          repository: squidfunk/mkdocs-material
          path: ${{ env.TEMP_DIR }}

      - name: Copy Squidfunk files
        shell: bash
        run: |
          cp -a $TEMP_DIR/material ./
          cp -a $TEMP_DIR/package.json ./
          cp -a $TEMP_DIR/README.md ./
          cp -a $TEMP_DIR/pyproject.toml ./
          ls -al
          pwd

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349
  
      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: ls
        shell: bash
        run: |
          ls -al
          pwd

      - name: Build and Push Docker Image
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/mkdocs:latest
